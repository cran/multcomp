
R : Copyright 2004, The R Foundation for Statistical Computing
Version 1.9.0 Under development (unstable) (2004-03-01), ISBN 3-900051-00-3

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

> attach(NULL, name = "CheckExEnv")
> assign(".CheckExEnv", as.environment(2), pos = length(search())) # base
> ## This plot.new() patch has no effect yet for persp();
> ## layout() & filled.contour() are now ok
> assign("plot.new", function() { .Internal(plot.new())
+ 		       pp <- par(c("mfg","mfcol","oma","mar"))
+ 		       if(all(pp$mfg[1:2] == c(1, pp$mfcol[2]))) {
+ 			 outer <- (oma4 <- pp$oma[4]) > 0; mar4 <- pp$mar[4]
+ 			 mtext(paste("help(",..nameEx,")"), side = 4,
+ 			       line = if(outer)max(1, oma4 - 1) else min(1, mar4 - 1),
+ 			       outer = outer, adj=1, cex= .8, col="orchid")} },
+        env = .CheckExEnv)
> assign("cleanEx", function(env = .GlobalEnv) {
+ 	rm(list = ls(envir = env, all.names = TRUE), envir = env)
+ 	RNGkind("Wichmann-Hill", "Kinderman-Ramage")
+ 	set.seed(290875)
+ 	#	assign(".Random.seed", c(0,rep(7654,3)), pos=1)
+        },
+        env = .CheckExEnv)
> assign("..nameEx", "__{must remake R-ex/*.R}__", env = .CheckExEnv) #-- for now
> assign("ptime", proc.time(), env = .CheckExEnv)
> postscript("multcomp-Examples.ps")
> assign("par.postscript", par(no.readonly = TRUE), env = .CheckExEnv)
> options(contrasts = c(unordered = "contr.treatment", ordered = "contr.poly"))
> library('multcomp')
Loading required package: mvtnorm 
> cleanEx(); ..nameEx <- "MultipleEndpoints"
> ###--- >>> `MultipleEndpoints' <<<----- Multiple Endpoints Data Set
> 
> 	## alias	 help(MultipleEndpoints)
> 
> ##___ Examples ___:
> 
> cleanEx(); ..nameEx <- "angina"
> ###--- >>> `angina' <<<----- Dose Response Data Set
> 
> 	## alias	 help(angina)
> 
> ##___ Examples ___:
> 
> data(angina)
> 
> # perform a dose-response analysis using simultaneous confidence 
> # intervals for Willimas' contrasts
> summary(simint(response~dose, data=angina, alternative="greater",
+                type="Williams"))

	Simultaneous 95% confidence intervals: Williams contrasts

Call: 
simint.formula(formula = response ~ dose, data = angina, alternative = "greater", 
    type = "Williams")

	 Williams contrasts for factor dose

Contrast matrix:
     dose0 dose1     dose2     dose3     dose4
C1 0    -1  0.00 0.0000000 0.0000000 1.0000000
C2 0    -1  0.00 0.0000000 0.5000000 0.5000000
C3 0    -1  0.00 0.3333333 0.3333333 0.3333333
C4 0    -1  0.25 0.2500000 0.2500000 0.2500000

Absolute Error Tolerance:  0.001 

 95 % quantile:  1.978 

Coefficients:
   Estimate   5 %  -- t value Std.Err. p raw p Bonf p adj
C1   10.499 7.435 Inf   6.778    1.549     0      0     0
C2    7.747 5.093 Inf   5.775    1.341     0      0     0
C3    6.297 3.795 Inf   4.979    1.265     0      0     0
C4    5.247 2.824 Inf   4.284    1.225     0      0     0
> 
> # compute now adjusted p-values for McDermott's test on trend
> summary(simtest(response~dose, data=angina, type="McDermott",
+                 alternative="greater",ttype="logical"))

	 Simultaneous tests: McDermott contrasts 

Call: 
simtest.formula(formula = response ~ dose, data = angina, type = "McDermott", 
    alternative = "greater", ttype = "logical")

	 McDermott contrasts for factor dose

Contrast matrix:
          dose0      dose1      dose2 dose3 dose4
C1 0 -1.0000000  1.0000000  0.0000000  0.00     0
C2 0 -0.5000000 -0.5000000  1.0000000  0.00     0
C3 0 -0.3333333 -0.3333333 -0.3333333  1.00     0
C4 0 -0.2500000 -0.2500000 -0.2500000 -0.25     1


Absolute Error Tolerance:  0.001 

Coefficients:
   Estimate t value Std.Err. p raw p Bonf p adj
C4    7.877   6.433    1.549 0.000  0.000 0.000
C3    3.164   2.502    1.341 0.008  0.024 0.024
C2    2.349   1.751    1.265 0.043  0.087 0.085
C1    2.095   1.353    1.225 0.091  0.091 0.091
> 
> ## Keywords: 'datasets'.
> 
> 
> cleanEx(); ..nameEx <- "cholesterol"
> 
> ### * cholesterol
> 
> ### Name: cholesterol
> ### Title: Cholesterol Reduction Data Set
> ### Aliases: cholesterol
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(cholesterol)
> 
> # adjusted p-values for all-pairwise comparisons in a one-way layout 
> # tests for restricted combinations
> simtest(response ~ trt, data=cholesterol, type="Tukey",
+         ttype="logical")

	Simultaneous tests: Tukey contrasts

Call: 
simtest.formula(formula = response ~ trt, data = cholesterol, 
    type = "Tukey", ttype = "logical")

Contrast matrix:
                      trt1time trt2times trt4times trtdrugD trtdrugE
trt2times-trt1time  0       -1         1         0        0        0
trt4times-trt1time  0       -1         0         1        0        0
trtdrugD-trt1time   0       -1         0         0        1        0
trtdrugE-trt1time   0       -1         0         0        0        1
trt4times-trt2times 0        0        -1         1        0        0
trtdrugD-trt2times  0        0        -1         0        1        0
trtdrugE-trt2times  0        0        -1         0        0        1
trtdrugD-trt4times  0        0         0        -1        1        0
trtdrugE-trt4times  0        0         0        -1        0        1
trtdrugE-trtdrugD   0        0         0         0       -1        1

Adjusted P-Values

                    p adj
trtdrugE-trt1time   0.000
trtdrugE-trt2times  0.000
trtdrugD-trt1time   0.000
trtdrugE-trt4times  0.000
trt4times-trt1time  0.000
trtdrugD-trt2times  0.000
trtdrugE-trtdrugD   0.001
trt2times-trt1time  0.042
trt4times-trt2times 0.042
trtdrugD-trt4times  0.044
> 
> # adjusted p-values all-pairwise comparisons in a one-way layout 
> # (tests for free combinations -> p-values will be larger)
> simtest(response ~ trt, data=cholesterol, type="Tukey",
+         ttype="free")

	Simultaneous tests: Tukey contrasts

Call: 
simtest.formula(formula = response ~ trt, data = cholesterol, 
    type = "Tukey", ttype = "free")

Contrast matrix:
                      trt1time trt2times trt4times trtdrugD trtdrugE
trt2times-trt1time  0       -1         1         0        0        0
trt4times-trt1time  0       -1         0         1        0        0
trtdrugD-trt1time   0       -1         0         0        1        0
trtdrugE-trt1time   0       -1         0         0        0        1
trt4times-trt2times 0        0        -1         1        0        0
trtdrugD-trt2times  0        0        -1         0        1        0
trtdrugE-trt2times  0        0        -1         0        0        1
trtdrugD-trt4times  0        0         0        -1        1        0
trtdrugE-trt4times  0        0         0        -1        0        1
trtdrugE-trtdrugD   0        0         0         0       -1        1

Adjusted P-Values

                    p adj
trtdrugE-trt1time   0.000
trtdrugE-trt2times  0.000
trtdrugD-trt1time   0.000
trtdrugE-trt4times  0.000
trt4times-trt1time  0.000
trtdrugD-trt2times  0.000
trtdrugE-trtdrugD   0.001
trt2times-trt1time  0.057
trt4times-trt2times 0.063
trtdrugD-trt4times  0.063
> 
> # the following lines illustrate the basic principles of
> # parameter estimation used in all functions in this package
> # and how the low-level functions can be used with raw parameter
> # estimates.
> 
> # the full design matrix (with reduced rank!)
> x <- cbind(1, 
+            matrix(c(rep(c(rep(1,10), rep(0,50)), 4), 
+                     rep(1, 10)), nrow = 50))
> y <- cholesterol$response
> 
> xpxi   <- mginv(t(x) %*% x)
> rankx  <- sum(diag((xpxi %*% (t(x) %*% x))))
> n      <- nrow(x)
> p      <- ncol(x)
> df     <- round(n-rankx)
> 
> # parameter estimates and their correlation
> parm   <- xpxi %*% t(x) %*% y
> mse    <- t(y-x %*% parm) %*% (y-x %*% parm)/df
> covm   <- mse[1,1]*xpxi
> 
> # the contrast matrix
> contrast <- contrMat(table(cholesterol$trt), type="Tukey")
> 
> # use the work-horse directly (and add zero column for the intercept)
> 
> csimint(estpar=parm, df=df, covm=covm, cmatrix=cbind(0, contrast))    

	Simultaneous confidence intervals: user-defined contrasts

	95 % confidence intervals

              Estimate  2.5 % 97.5 %
2times-1time     3.443 -0.659  7.545
4times-1time     6.593  2.491 10.695
drugD-1time      9.579  5.477 13.681
drugE-1time     15.166 11.064 19.267
4times-2times    3.150 -0.952  7.252
drugD-2times     6.136  2.034 10.238
drugE-2times    11.723  7.621 15.824
drugD-4times     2.986 -1.115  7.088
drugE-4times     8.573  4.471 12.675
drugE-drugD      5.586  1.485  9.688
> csimtest(estpar=parm, df=df, covm=covm, cmatrix=cbind(0, contrast),
+          ttype="logical")      

	Simultaneous tests: user-defined contrasts

Contrast matrix:
                1time 2times 4times drugD drugE
2times-1time  0    -1      1      0     0     0
4times-1time  0    -1      0      1     0     0
drugD-1time   0    -1      0      0     1     0
drugE-1time   0    -1      0      0     0     1
4times-2times 0     0     -1      1     0     0
drugD-2times  0     0     -1      0     1     0
drugE-2times  0     0     -1      0     0     1
drugD-4times  0     0      0     -1     1     0
drugE-4times  0     0      0     -1     0     1
drugE-drugD   0     0      0      0    -1     1

Adjusted P-Values

              p adj
drugE-1time   0.000
drugE-2times  0.000
drugD-1time   0.000
drugE-4times  0.000
4times-1time  0.000
drugD-2times  0.000
drugE-drugD   0.001
2times-1time  0.042
4times-2times 0.042
drugD-4times  0.044
> 
> cleanEx(); ..nameEx <- "contrMat"
> 
> ## Keywords: 'datasets'.
> 
> 
> data(detergent)
> 
> N <- rep(2, 5)
> 
> # BIBD: prepare the contrast matrix = all-pair comparisons for 
> # the 5 levels of detergent
> C <- contrMat(N, type="Tukey")
> # the additional 10 columns of are for the 10 blocks
> C <- cbind( matrix(0, ncol=10, nrow=10), C )
> # numerate the contrasts
> colnames(C) <- NULL
> rownames(C) <- paste("C", 1:nrow(C), sep="")
> 
> # adjusted p-values
> summary(simtest(plates ~ block+detergent, data=detergent,
+ whichf="detergent", type="Tukey", ttype="logical")) # , cmatrix=C))

	 Simultaneous tests: Tukey contrasts 

Call: 
simtest.formula(formula = plates ~ block + detergent, data = detergent, 
    whichf = "detergent", type = "Tukey", ttype = "logical")

	 Tukey contrasts for factor detergent, covariable:  block 

Contrast matrix:
                                          detergent1 detergent2 detergent3
detergent2-detergent1 0 0 0 0 0 0 0 0 0 0         -1          1          0
detergent3-detergent1 0 0 0 0 0 0 0 0 0 0         -1          0          1
detergent4-detergent1 0 0 0 0 0 0 0 0 0 0         -1          0          0
detergent5-detergent1 0 0 0 0 0 0 0 0 0 0         -1          0          0
detergent3-detergent2 0 0 0 0 0 0 0 0 0 0          0         -1          1
detergent4-detergent2 0 0 0 0 0 0 0 0 0 0          0         -1          0
detergent5-detergent2 0 0 0 0 0 0 0 0 0 0          0         -1          0
detergent4-detergent3 0 0 0 0 0 0 0 0 0 0          0          0         -1
detergent5-detergent3 0 0 0 0 0 0 0 0 0 0          0          0         -1
detergent5-detergent4 0 0 0 0 0 0 0 0 0 0          0          0          0
                      detergent4 detergent5
detergent2-detergent1          0          0
detergent3-detergent1          0          0
detergent4-detergent1          1          0
detergent5-detergent1          0          1
detergent3-detergent2          0          0
detergent4-detergent2          1          0
detergent5-detergent2          0          1
detergent4-detergent3          1          0
detergent5-detergent3          0          1
detergent5-detergent4         -1          1


Absolute Error Tolerance:  0.001 

Coefficients:
                      Estimate t value Std.Err. p raw p Bonf p adj
detergent5-detergent3   -7.933  -9.140    0.868 0.000  0.000 0.000
detergent5-detergent4   -6.533  -7.527    0.868 0.000  0.000 0.000
detergent3-detergent2    5.733  -6.606    0.868 0.000  0.000 0.000
detergent4-detergent2    4.333  -4.993    0.868 0.000  0.000 0.000
detergent5-detergent1   -4.333  -4.993    0.868 0.000  0.001 0.000
detergent3-detergent1    3.600  -4.148    0.868 0.001  0.003 0.003
detergent4-detergent1    2.200  -2.535    0.868 0.022  0.044 0.043
detergent5-detergent2   -2.200  -2.535    0.868 0.022  0.044 0.043
detergent2-detergent1   -2.133  -2.458    0.868 0.026  0.052 0.050
detergent4-detergent3   -1.400  -1.613    0.868 0.126  0.126 0.126
> 
> 
> ## Keywords: 'datasets'.
> 
> 
> cleanEx(); ..nameEx <- "recovery"
> ###--- >>> `recovery' <<<----- Recovery Time Data Set
> 
> 	## alias	 help(recovery)
> 
> ##___ Examples ___:
> 
> data(recovery)
> 
> # one-sided simultaneous confidence intervals for Dunnett 
> # in the one-way layout
> simint(minutes~blanket, data=recovery, conf.level=0.9, 
+        alternative="less",eps=0.0001)

	Simultaneous confidence intervals: Dunnett contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    conf.level = 0.9, alternative = "less", eps = 1e-04)

	90 % confidence intervals

                    Estimate   --    90 %
blanketb1-blanketb0  -2.1333 -Inf  0.8226
blanketb2-blanketb0  -7.4667 -Inf -4.5108
blanketb3-blanketb0  -1.6667 -Inf -0.0360
> 
> # same results, but specifying the contrast matrix by hand
> C <- c(0, 0, 0, -1, -1, -1, 1, 0, 0, 0, 1, 0, 0, 0, 1)
> C <- matrix(C, ncol=5)
> # numerate the contrasts
> rownames(C) <- paste("C", 1:nrow(C), sep="")
> test <- simint(minutes~blanket, data=recovery, conf.level=0.9, 
+                alternative="less",eps=0.0001, cmatrix=C)
> print(test)

	Simultaneous confidence intervals: user-defined contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    conf.level = 0.9, alternative = "less", eps = 1e-04, cmatrix = C)

	90 % confidence intervals

   Estimate   --    90 %
C1  -2.1333 -Inf  0.8225
C2  -7.4667 -Inf -4.5108
C3  -1.6667 -Inf -0.0360
> 
> # same results, but more detailed information using the summary method
> summary(test)

	Simultaneous 90% confidence intervals: user-defined contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    conf.level = 0.9, alternative = "less", eps = 1e-04, cmatrix = C)

	 user-defined contrasts for factor blanket

Contrast matrix:
   (Intercept) blanketb0 blanketb1 blanketb2 blanketb3
C1           0        -1         1         0         0
C2           0        -1         0         1         0
C3           0        -1         0         0         1

Absolute Error Tolerance:  1e-04 

 90 % quantile:  1.8431 

Coefficients:
   Estimate   --    90 % t value Std.Err.  p raw p Bonf  p adj
C1  -2.1333 -Inf  0.8225 -1.3302   1.6038 0.0958 0.2874 0.2412
C2  -7.4667 -Inf -4.5108 -4.6556   1.6038 0.0000 0.0001 0.0001
C3  -1.6667 -Inf -0.0360 -1.8837   0.8848 0.0337 0.1012 0.0924
> 
> ## Keywords: 'datasets'.
> 
> 
> cleanEx(); ..nameEx <- "respiratory"
> ###--- >>> `respiratory' <<<----- Respiratory Health Data Set
> 
> 	## alias	 help(respiratory)
> 
> ##___ Examples ___:
> 
> data(respiratory)
> 
> # compute the contrast matrix in several steps 
> # overall active vs. placebo
> CA  <- c(0, 13, 0, 11, 0, 13, 0, 17, 0)
> CP  <- c(0, 0, 14, 0, 12,  0, 19, 0, 12)
> CA  <- CA/sum(CA)
> CP  <- CP/sum(CP)
> C1  <- CP-CA
> 
> # for older subgroup only
> CAO <- c( 0, 13,  0,  0,  0, 13,  0,  0,  0 ) 
> CPO <- c( 0,  0, 14,  0,  0,  0, 19,  0,  0 ) 
> CAO <- CAO/sum(CAO)
> CPO <- CPO/sum(CPO)
> C2  <- CPO - CAO
> 
> # for younger subgroup only 
> CAY <- c( 0,  0,  0, 11,  0,  0,  0, 17,  0 ) 
> CPY <- c( 0,  0,  0,  0, 12,  0,  0,  0, 12 ) 
> CAY <- CAY/sum(CAY)
> CPY <- CPY/sum(CPY)
> C3  <- CPY - CAY
> 
> # subgroup with inital good health
> CAG <- c( 0, 13,  0, 11,  0,  0,  0,  0,  0 ) 
> CPG <- c( 0,  0, 14,  0, 12,  0,  0,  0,  0 ) 
> CAG <- CAG/sum(CAG)
> CPG <- CPG/sum(CPG)
> C4  <- CPG - CAG
> 
> # subgroup with inital poor health
> CAP <- c( 0,  0,  0,  0,  0, 13,  0, 17,  0 ) 
> CPP <- c( 0,  0,  0,  0,  0,  0, 19,  0, 12 ) 
> CAP <- CAP/sum(CAP)
> CPP <- CPP/sum(CPP)
> C5  <- CPP - CAP
> 
> # all 4 subgroup combinations of age and initial health condition 
> C6  <- c( 0, -1,  1,  0,  0,  0,  0,  0,  0 )
> C7  <- c( 0,  0,  0,  0,  0, -1,  1,  0,  0 )
> C8  <- c( 0,  0,  0, -1,  1,  0,  0,  0,  0 )
> C9  <- c( 0,  0,  0,  0,  0,  0,  0, -1,  1 )
> 
> C   <- rbind(C1, C2, C3, C4, C5, C6, C7, C8, C9)   
> # numerate the contrasts
> colnames(C) <- NULL
> rownames(C) <- paste("C", 1:nrow(C), sep="")
> 
> summary(simtest(Score ~ Treatment:AgeGroup:InitHealth,
+                 data=respiratory, ttype="logical",
+                 alternative="greater", cmatrix=C))

	 Simultaneous tests: user-defined contrasts 

Call: 
simtest.formula(formula = Score ~ Treatment:AgeGroup:InitHealth, 
    data = respiratory, ttype = "logical", alternative = "greater", 
    cmatrix = C)

	 user-defined contrasts for factor Treatment:AgeGroup:InitHealth

Contrast matrix:
   (Intercept) TreatmentActive:AgeGroupOlder:InitHealthGood
C1           0                                    0.2407407
C2           0                                    0.5000000
C3           0                                    0.0000000
C4           0                                    0.5416667
C5           0                                    0.0000000
C6           0                                    1.0000000
C7           0                                    0.0000000
C8           0                                    0.0000000
C9           0                                    0.0000000
   TreatmentPlacebo:AgeGroupOlder:InitHealthGood
C1                                    -0.2456140
C2                                    -0.4242424
C3                                     0.0000000
C4                                    -0.5384615
C5                                     0.0000000
C6                                    -1.0000000
C7                                     0.0000000
C8                                     0.0000000
C9                                     0.0000000
   TreatmentActive:AgeGroupYounger:InitHealthGood
C1                                      0.2037037
C2                                      0.0000000
C3                                      0.3928571
C4                                      0.4583333
C5                                      0.0000000
C6                                      0.0000000
C7                                      0.0000000
C8                                      1.0000000
C9                                      0.0000000
   TreatmentPlacebo:AgeGroupYounger:InitHealthGood
C1                                      -0.2105263
C2                                       0.0000000
C3                                      -0.5000000
C4                                      -0.4615385
C5                                       0.0000000
C6                                       0.0000000
C7                                       0.0000000
C8                                      -1.0000000
C9                                       0.0000000
   TreatmentActive:AgeGroupOlder:InitHealthPoor
C1                                    0.2407407
C2                                    0.5000000
C3                                    0.0000000
C4                                    0.0000000
C5                                    0.4333333
C6                                    0.0000000
C7                                    1.0000000
C8                                    0.0000000
C9                                    0.0000000
   TreatmentPlacebo:AgeGroupOlder:InitHealthPoor
C1                                    -0.3333333
C2                                    -0.5757576
C3                                     0.0000000
C4                                     0.0000000
C5                                    -0.6129032
C6                                     0.0000000
C7                                    -1.0000000
C8                                     0.0000000
C9                                     0.0000000
   TreatmentActive:AgeGroupYounger:InitHealthPoor
C1                                      0.3148148
C2                                      0.0000000
C3                                      0.6071429
C4                                      0.0000000
C5                                      0.5666667
C6                                      0.0000000
C7                                      0.0000000
C8                                      0.0000000
C9                                      1.0000000
   TreatmentPlacebo:AgeGroupYounger:InitHealthPoor
C1                                      -0.2105263
C2                                       0.0000000
C3                                      -0.5000000
C4                                       0.0000000
C5                                      -0.3870968
C6                                       0.0000000
C7                                       0.0000000
C8                                       0.0000000
C9                                      -1.0000000


Absolute Error Tolerance:  0.001 

Coefficients:
   Estimate t value Std.Err. p raw p Bonf p adj
C2    1.073   4.074    0.191 0.000  0.000 0.000
C1    0.736   3.857    0.263 0.000  0.001 0.001
C5    0.861   3.346    0.279 0.001  0.003 0.003
C6    1.219   3.149    0.284 0.001  0.006 0.006
C9    0.870   2.296    0.257 0.012  0.059 0.044
C7    0.815   2.255    0.387 0.013  0.059 0.044
C4    0.609   2.142    0.362 0.017  0.059 0.044
C3    0.319   1.142    0.419 0.128  0.256 0.195
C8   -0.105  -0.249    0.379 0.598  0.598 0.598
> 
> ## Keywords: 'datasets'.
> 
> 
> cleanEx(); ..nameEx <- "simint"
> ###--- >>> `simint' <<<----- Simultaneous Intervals
> 
> 	## alias	 help(simint)
> 	## alias	 help(simint.default)
> 	## alias	 help(simint.formula)
> 
> ##___ Examples ___:
> 
> data(recovery)
> 
> # one-sided simultaneous confidence intervals for Dunnett 
> # in the one-way layout
> summary(simint(minutes~blanket, data=recovery, type="Dunnett", conf.level=0.9, 
+        alternative="less",eps=0.0001))

	Simultaneous 90% confidence intervals: Dunnett contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    type = "Dunnett", conf.level = 0.9, alternative = "less", 
    eps = 1e-04)

	 Dunnett contrasts for factor blanket

Contrast matrix:
                      blanketb0 blanketb1 blanketb2 blanketb3
blanketb1-blanketb0 0        -1         1         0         0
blanketb2-blanketb0 0        -1         0         1         0
blanketb3-blanketb0 0        -1         0         0         1

Absolute Error Tolerance:  1e-04 

 90 % quantile:  1.8431 

Coefficients:
                    Estimate   --    90 % t value Std.Err.  p raw p Bonf  p adj
blanketb1-blanketb0  -2.1333 -Inf  0.8226 -1.3302   1.6038 0.0958 0.2874 0.2411
blanketb2-blanketb0  -7.4667 -Inf -4.5108 -4.6556   1.6038 0.0000 0.0001 0.0001
blanketb3-blanketb0  -1.6667 -Inf -0.0360 -1.8837   0.8848 0.0337 0.1012 0.0923
> 
> 
> ## Keywords: 'htest'.
> 
> 
> cleanEx(); ..nameEx <- "simtest"
> ###--- >>> `simtest' <<<----- Simultaneous comparisons
> 
> 	## alias	 help(simtest.default)
> 	## alias	 help(simtest.formula)
> 	## alias	 help(simtest)
> 
> ##___ Examples ___:
> 
> data(cholesterol)
> 
> # adjusted p-values for all-pairwise comparisons in a onw-way 
> # layout (tests for restricted combinations)
> simtest(response ~ trt, data=cholesterol, type="Tukey", ttype="logical")

	Simultaneous tests: Tukey contrasts

Call: 
simtest.formula(formula = response ~ trt, data = cholesterol, 
    type = "Tukey", ttype = "logical")

Contrast matrix:
                      trt1time trt2times trt4times trtdrugD trtdrugE
trt2times-trt1time  0       -1         1         0        0        0
trt4times-trt1time  0       -1         0         1        0        0
trtdrugD-trt1time   0       -1         0         0        1        0
trtdrugE-trt1time   0       -1         0         0        0        1
trt4times-trt2times 0        0        -1         1        0        0
trtdrugD-trt2times  0        0        -1         0        1        0
trtdrugE-trt2times  0        0        -1         0        0        1
trtdrugD-trt4times  0        0         0        -1        1        0
trtdrugE-trt4times  0        0         0        -1        0        1
trtdrugE-trtdrugD   0        0         0         0       -1        1

Adjusted P-Values

                    p adj
trtdrugE-trt1time   0.000
trtdrugE-trt2times  0.000
trtdrugD-trt1time   0.000
trtdrugE-trt4times  0.000
trt4times-trt1time  0.000
trtdrugD-trt2times  0.000
trtdrugE-trtdrugD   0.001
trt2times-trt1time  0.042
trt4times-trt2times 0.042
trtdrugD-trt4times  0.044
> 
> 
> ## Keywords: 'htest'.
> 
> 
> cleanEx(); ..nameEx <- "tire"
> ###--- >>> `tire' <<<----- Tire Wear Data Set
> 
> 	## alias	 help(tire)
> 
> ##___ Examples ___:
> 
> data(tire)
> C <- c(0,1,-1,0,10,-10)
> for ( x in seq(15,70,5) ) { C <- rbind( C,c(0,1,-1,0,x,-x) ) }
> # numerate the contrasts
> rownames(C) <- paste("C", 1:nrow(C), sep="")
> 
> # simultaneous confidence intervals of two regression functions
> summary(simint(cost ~ make + mph + make:mph, data=tire,
+                cmatrix=C, eps=0.001))

	Simultaneous 95% confidence intervals: user-defined contrasts

Call: 
simint.formula(formula = cost ~ make + mph + make:mph, data = tire, 
    cmatrix = C, eps = 0.001)

	 user-defined contrasts for factor make, covariables:  mph + make:mph 

Contrast matrix:
    (Intercept) makeA makeB mph makeA:mph makeB:mph
C1            0     1    -1   0        10       -10
C2            0     1    -1   0        15       -15
C3            0     1    -1   0        20       -20
C4            0     1    -1   0        25       -25
C5            0     1    -1   0        30       -30
C6            0     1    -1   0        35       -35
C7            0     1    -1   0        40       -40
C8            0     1    -1   0        45       -45
C9            0     1    -1   0        50       -50
C10           0     1    -1   0        55       -55
C11           0     1    -1   0        60       -60
C12           0     1    -1   0        65       -65
C13           0     1    -1   0        70       -70

Absolute Error Tolerance:  0.001 

 95 % quantile:  2.648 

Coefficients:
    Estimate  2.5 % 97.5 % t value Std.Err. p raw p Bonf p adj
C1    -4.107 -6.527 -1.686  -4.492    0.914 0.000  0.005 0.001
C2    -3.454 -5.594 -1.314  -4.272    0.808 0.001  0.008 0.002
C3    -2.801 -4.681 -0.921  -3.945    0.710 0.001  0.015 0.003
C4    -2.148 -3.798 -0.499  -3.448    0.623 0.003  0.043 0.011
C5    -1.496 -2.958 -0.033  -2.707    0.552 0.016  0.202 0.045
C6    -0.843 -2.181  0.495  -1.668    0.505 0.115  1.000 0.264
C7    -0.190 -1.484  1.104  -0.389    0.489 0.703  1.000 0.924
C8     0.463 -0.875  1.801   0.916    0.505 0.373  1.000 0.653
C9     1.116 -0.347  2.578   2.019    0.552 0.061  0.787 0.152
C10    1.768  0.119  3.418   2.838    0.623 0.012  0.154 0.035
C11    2.421  0.541  4.301   3.410    0.710 0.004  0.047 0.011
C12    3.074  0.934  5.214   3.802    0.808 0.002  0.020 0.005
C13    3.727  1.306  6.147   4.076    0.914 0.001  0.011 0.003
> 
> ## Keywords: 'datasets'.
> 
> 
> cleanEx(); ..nameEx <- "waste"
> ###--- >>> `waste' <<<----- Industrial Waste Data Set
> 
> 	## alias	 help(waste)
> 
> ##___ Examples ___:
> 
> data(waste)
> summary(aov(waste ~ envir + temp + envir*temp, data=waste))
            Df  Sum Sq Mean Sq F value    Pr(>F)    
envir        4 24.6854  6.1713  5.2532 0.0075463 ** 
temp         2 30.6928 15.3464 13.0632 0.0005185 ***
envir:temp   8 22.9116  2.8639  2.4378 0.0651340 .  
Residuals   15 17.6217  1.1748                      
---
Signif. codes:  0 `***' 0.001 `**' 0.01 `*' 0.05 `.' 0.1 ` ' 1 
> 
> summary(simint(waste ~ envir:temp, data=waste,
+                type="Tetrade", eps=0.01))

	Simultaneous 95% confidence intervals: Tetrade contrasts

Call: 
simint.formula(formula = waste ~ envir:temp, data = waste, type = "Tetrade", 
    eps = 0.01)

	 Tetrade contrasts for factor envir:temp

Contrast matrix:
                [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
(11-12)-(21-22)    0    1   -1    0   -1    1    0    0    0     0     0     0
(11-13)-(21-23)    0    1    0   -1   -1    0    1    0    0     0     0     0
(12-13)-(22-23)    0    0    1   -1    0   -1    1    0    0     0     0     0
(11-12)-(31-32)    0    1   -1    0    0    0    0   -1    1     0     0     0
(11-13)-(31-33)    0    1    0   -1    0    0    0   -1    0     1     0     0
(12-13)-(32-33)    0    0    1   -1    0    0    0    0   -1     1     0     0
(11-12)-(41-42)    0    1   -1    0    0    0    0    0    0     0    -1     1
(11-13)-(41-43)    0    1    0   -1    0    0    0    0    0     0    -1     0
(12-13)-(42-43)    0    0    1   -1    0    0    0    0    0     0     0    -1
(11-12)-(51-52)    0    1   -1    0    0    0    0    0    0     0     0     0
(11-13)-(51-53)    0    1    0   -1    0    0    0    0    0     0     0     0
(12-13)-(52-53)    0    0    1   -1    0    0    0    0    0     0     0     0
(21-22)-(31-32)    0    0    0    0    1   -1    0   -1    1     0     0     0
(21-23)-(31-33)    0    0    0    0    1    0   -1   -1    0     1     0     0
(22-23)-(32-33)    0    0    0    0    0    1   -1    0   -1     1     0     0
(21-22)-(41-42)    0    0    0    0    1   -1    0    0    0     0    -1     1
(21-23)-(41-43)    0    0    0    0    1    0   -1    0    0     0    -1     0
(22-23)-(42-43)    0    0    0    0    0    1   -1    0    0     0     0    -1
(21-22)-(51-52)    0    0    0    0    1   -1    0    0    0     0     0     0
(21-23)-(51-53)    0    0    0    0    1    0   -1    0    0     0     0     0
(22-23)-(52-53)    0    0    0    0    0    1   -1    0    0     0     0     0
(31-32)-(41-42)    0    0    0    0    0    0    0    1   -1     0    -1     1
(31-33)-(41-43)    0    0    0    0    0    0    0    1    0    -1    -1     0
(32-33)-(42-43)    0    0    0    0    0    0    0    0    1    -1     0    -1
(31-32)-(51-52)    0    0    0    0    0    0    0    1   -1     0     0     0
(31-33)-(51-53)    0    0    0    0    0    0    0    1    0    -1     0     0
(32-33)-(52-53)    0    0    0    0    0    0    0    0    1    -1     0     0
(41-42)-(51-52)    0    0    0    0    0    0    0    0    0     0     1    -1
(41-43)-(51-53)    0    0    0    0    0    0    0    0    0     0     1     0
(42-43)-(52-53)    0    0    0    0    0    0    0    0    0     0     0     1
                [,13] [,14] [,15] [,16]
(11-12)-(21-22)     0     0     0     0
(11-13)-(21-23)     0     0     0     0
(12-13)-(22-23)     0     0     0     0
(11-12)-(31-32)     0     0     0     0
(11-13)-(31-33)     0     0     0     0
(12-13)-(32-33)     0     0     0     0
(11-12)-(41-42)     0     0     0     0
(11-13)-(41-43)     1     0     0     0
(12-13)-(42-43)     1     0     0     0
(11-12)-(51-52)     0    -1     1     0
(11-13)-(51-53)     0    -1     0     1
(12-13)-(52-53)     0     0    -1     1
(21-22)-(31-32)     0     0     0     0
(21-23)-(31-33)     0     0     0     0
(22-23)-(32-33)     0     0     0     0
(21-22)-(41-42)     0     0     0     0
(21-23)-(41-43)     1     0     0     0
(22-23)-(42-43)     1     0     0     0
(21-22)-(51-52)     0    -1     1     0
(21-23)-(51-53)     0    -1     0     1
(22-23)-(52-53)     0     0    -1     1
(31-32)-(41-42)     0     0     0     0
(31-33)-(41-43)     1     0     0     0
(32-33)-(42-43)     1     0     0     0
(31-32)-(51-52)     0    -1     1     0
(31-33)-(51-53)     0    -1     0     1
(32-33)-(52-53)     0     0    -1     1
(41-42)-(51-52)     0    -1     1     0
(41-43)-(51-53)    -1    -1     0     1
(42-43)-(52-53)    -1     0    -1     1

Absolute Error Tolerance:  0.01 

 95 % quantile:  3.55 

Coefficients:
                Estimate 2.5 % 97.5 % t value Std.Err. p raw p Bonf p adj
(11-12)-(21-22)    -1.78 -7.22   3.66   -1.16     1.53  0.26   1.00  0.95
(11-13)-(21-23)    -0.22 -5.66   5.22   -0.14     1.53  0.89   1.00  1.00
(12-13)-(22-23)     1.56 -3.88   7.00    1.02     1.53  0.32   1.00  0.98
(11-12)-(31-32)    -2.36 -7.81   3.08   -1.54     1.53  0.14   1.00  0.81
(11-13)-(31-33)    -1.71 -7.16   3.73   -1.12     1.53  0.28   1.00  0.96
(12-13)-(32-33)     0.65 -4.79   6.09    0.42     1.53  0.68   1.00  1.00
(11-12)-(41-42)     2.08 -3.36   7.52    1.36     1.53  0.19   1.00  0.89
(11-13)-(41-43)     3.72 -1.72   9.16    2.43     1.53  0.03   0.85  0.32
(12-13)-(42-43)     1.64 -3.80   7.08    1.07     1.53  0.30   1.00  0.97
(11-12)-(51-52)     1.26 -4.18   6.70    0.82     1.53  0.42   1.00  0.99
(11-13)-(51-53)     1.99 -3.45   7.43    1.30     1.53  0.21   1.00  0.92
(12-13)-(52-53)     0.73 -4.71   6.17    0.48     1.53  0.64   1.00  1.00
(21-22)-(31-32)    -0.58 -6.03   4.86   -0.38     1.53  0.71   1.00  1.00
(21-23)-(31-33)    -1.49 -6.94   3.95   -0.98     1.53  0.34   1.00  0.98
(22-23)-(32-33)    -0.91 -6.35   4.53   -0.59     1.53  0.56   1.00  1.00
(21-22)-(41-42)     3.86 -1.58   9.30    2.52     1.53  0.02   0.71  0.29
(21-23)-(41-43)     3.94 -1.50   9.38    2.57     1.53  0.02   0.64  0.26
(22-23)-(42-43)     0.08 -5.36   5.52    0.05     1.53  0.96   1.00  1.00
(21-22)-(51-52)     3.04 -2.40   8.48    1.98     1.53  0.07   1.00  0.56
(21-23)-(51-53)     2.21 -3.23   7.65    1.44     1.53  0.17   1.00  0.86
(22-23)-(52-53)    -0.83 -6.27   4.61   -0.54     1.53  0.60   1.00  1.00
(31-32)-(41-42)     4.44 -1.00   9.89    2.90     1.53  0.01   0.33  0.15
(31-33)-(41-43)     5.43 -0.01  10.88    3.55     1.53  0.00   0.09  0.06
(32-33)-(42-43)     0.99 -4.45   6.43    0.65     1.53  0.53   1.00  1.00
(31-32)-(51-52)     3.62 -1.82   9.07    2.36     1.53  0.03   0.96  0.36
(31-33)-(51-53)     3.70 -1.74   9.15    2.42     1.53  0.03   0.87  0.33
(32-33)-(52-53)     0.08 -5.36   5.52    0.05     1.53  0.96   1.00  1.00
(41-42)-(51-52)    -0.82 -6.26   4.62   -0.53     1.53  0.60   1.00  1.00
(41-43)-(51-53)    -1.73 -7.17   3.71   -1.13     1.53  0.28   1.00  0.96
(42-43)-(52-53)    -0.91 -6.35   4.53   -0.59     1.53  0.56   1.00  1.00
> 
> ## Keywords: 'datasets'.
> 
> 
> cat("Time elapsed: ", proc.time() - get("ptime", env = .CheckExEnv),"\n")
Time elapsed:  39.66 0.03 39.89 0 0 
> dev.off(); quit('no')
null device 
          1 
