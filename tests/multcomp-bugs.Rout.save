
R : Copyright 2003, The R Development Core Team
Version 1.7.1  (2003-06-16)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

> 
> actversion <- paste(R.version$major, R.version$minor, sep=".")
> thisversion <- "1.7.0"
> if (compareVersion(actversion, thisversion) >= 0)
+   RNGversion("1.6.2")
Warning message: 
Buggy version of Kinderman-Ramage generator used. in: RNGkind("Marsaglia-Multicarry", "Buggy Kinderman-Ramage") 
> set.seed(290875)
> 
> library(multcomp)
Loading required package: mvtnorm 
> 
> data(detergent)
> 
> N <- rep(2, 5)
> 
> C <- contrMat(N, type="Tukey")
> 
> # should be equal
> one <- simtest(plates ~ block+detergent, data=detergent, whichf="detergent",
+         ttype="logical", cmatrix=C)
> two <- simtest(plates ~ block+detergent, data=detergent, whichf="detergent",
+         ttype="logical", type="Tukey")
> three <- simtest(plates ~ block+detergent, data=detergent, ttype="logical",
+         cmatrix=cbind(matrix(0, ncol=11, nrow=10), C))
Warning message: 
no finite arguments to max; returning -Inf 
> stopifnot(round(max(abs(one$p.value.adj - two$p.value.adj)), 2) == 0)
> stopifnot(round(max(abs(two$p.value.adj -  three$p.value.adj)), 2) == 0)
> 
> # Contrasts for 2 levels only failed, spotted by 
> # Peter B. Mandeville <mandevip@uaslp.mx>
> load("TukeyTestData.rda")
> Dunn <- round(simint(LAC~SC,data=TukeyTestData)$conf.int, 3)
> Tukey <- round(simint(LAC~SC,data=TukeyTestData,type="Tukey")$conf.int,3)
> HSD <- round(TukeyHSD(aov(LAC ~ SC, data=TukeyTestData))$SC[2:3],3)
> attributes(Dunn) <- NULL
> attributes(Tukey) <- NULL
> attributes(HSD) <- NULL
> stopifnot(all.equal(Dunn, Tukey))
> stopifnot(all.equal(Dunn, HSD))
> 
> # tied pvalues in simtest
> # spotted by Shin-ichi Hirata <001m9041@med.stud.kumamoto-u.ac.jp>
> Response<-
+ c(0.0333333,0.0000000,0.1000000,0.0000000,0.0000000,0.1000000,0.4000000,
+ -0.3333333,0.1000000,0.0000000,0.2000000,0.0000000,-0.1666667,0.1000000,
+ -0.1333333,-0.0333333,0.0333333,0.0000000,0.0000000,0.0000000,0.0333333,
+ 0.0000000,0.0000000,0.1000000,-0.1666667,0.0000000,-0.2333333,0.2000000,
+ 0.0000000,0.2000000,0.0000000,-0.0666667,-0.1666667,0.1000000,0.2000000,
+ 0.0000000,0.0000000,0.0000000,0.0000000,0.1000000,0.1000000,-0.1666667,
+ 0.1000000,0.0000000,-0.2333333,0.0333333,0.4333333,0.1000000,0.2000000,
+ 0.0000000,0.1000000)
> Event<-factor(
+ c("b","b","b","b","b","b","c","c","c","c","c","c","c","d","d","d","d","d",
+ "d","e","e","e","e","e","e",
+ "f","f","f","f","f","f","f","g","g","g","g","g","g","h","h","h","h","h", 
+ "h","a","a","a","a","a","a","a"))
> testdata<-cbind(as.data.frame(Response),Event)
> simtest(Response~Event,data=testdata,type="Dunnett")

	Simultaneous tests: Dunnett contrasts

Call: 
simtest.formula(formula = Response ~ Event, data = testdata, 
    type = "Dunnett")

Contrast matrix:
                Eventa Eventb Eventc Eventd Evente Eventf Eventg Eventh
Eventb-Eventa 0     -1      1      0      0      0      0      0      0
Eventc-Eventa 0     -1      0      1      0      0      0      0      0
Eventd-Eventa 0     -1      0      0      1      0      0      0      0
Evente-Eventa 0     -1      0      0      0      1      0      0      0
Eventf-Eventa 0     -1      0      0      0      0      1      0      0
Eventg-Eventa 0     -1      0      0      0      0      0      1      0
Eventh-Eventa 0     -1      0      0      0      0      0      0      1

Adjusted P-Values

              p adj
Evente-Eventa 0.761
Eventd-Eventa 0.761
Eventf-Eventa 0.803
Eventg-Eventa 0.828
Eventh-Eventa 0.828
Eventc-Eventa 0.828
Eventb-Eventa 0.828
> 
> ### test `subset' and `na.action' arguments
> data(recovery)
> simint(minutes ~ blanket, data=recovery, conf.level=0.9, 
+        alternative="less", eps=0.01, subset = minutes > 7, na.action =
+        na.fail)

	Simultaneous confidence intervals: Dunnett contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    subset = minutes > 7, na.action = na.fail, conf.level = 0.9, 
    alternative = "less", eps = 0.01)

	90 % confidence intervals

                    Estimate lower CI upper CI
blanketb1-blanketb0    -2.13     -Inf     0.60
blanketb2-blanketb0    -6.30     -Inf    -3.03
blanketb3-blanketb0    -1.23     -Inf     0.31
> simint(minutes ~ blanket, data=recovery, conf.level=0.9, 
+        alternative="less", eps=0.01, subset = blanket != "b0", na.action =
+        na.fail)

	Simultaneous confidence intervals: Dunnett contrasts

Call: 
simint.formula(formula = minutes ~ blanket, data = recovery, 
    subset = blanket != "b0", na.action = na.fail, conf.level = 0.9, 
    alternative = "less", eps = 0.01)

	90 % confidence intervals

                    Estimate lower CI upper CI
blanketb2-blanketb1    -5.33     -Inf    -1.65
blanketb3-blanketb1     0.47     -Inf     3.32
> 
> ### spotted by Jamie Jarabek <jjarabek@stat.ufl.edu>
> ### fixed in mvtnorm_0.6-1 (univariate pmvt with df = 0)
> 
> x <- gl(3,10,30)
> levels(x) <-c(" G1","G2","G3")
> y <- rbinom(30,1,prob=c(rep(.8,10),rep(.2,10),rep(.5,10)))
> toy.glm <- glm(y ~x, family=binomial)
> csimint(estpar=coef(toy.glm)[2:3],df=toy.glm$df.residual,
+         covm=vcov(toy.glm)[2:3,2:3],
+         cmatrix=contrMat(c(10,10),type="Tukey"),asympt=TRUE)

	Asymptotic simultaneous confidence intervals: user-defined contrasts

	95 % confidence intervals

    Estimate lower CI upper CI
2-1     9.18  -64.876   83.235
> 
> ### whichf is part of a level of an factor treated as covariable
> ### due to inconsistencies in `parseformula'
> ### reported by Brian D. Ripley <ripley@stats.ox.ac.uk>
> ### by means of an example in the script `ch06.R' (in VR/MASS/inst/scripts)
> load("oats.rda")
> oats1 <- aov(Y ~ N + V + B, data = oats)
> thsd <- TukeyHSD(oats1, which = "V")
> thsd
  Tukey multiple comparisons of means
    95% family-wise confidence level

Fit: aov(formula = Y ~ N + V + B, data = oats)

$V
                             diff        lwr       upr
Marvellous-Golden.rain   5.291667  -5.327322 15.910655
Victory-Golden.rain     -6.875000 -17.493988  3.743988
Victory-Marvellous     -12.166667 -22.785655 -1.547678

> cis <- round(thsd$V[,2:3], 2)
> attributes(cis) <- NULL
> thsdsi <- simint(Y ~ N + V + B, data = oats, whichf = "V", type = "Tukey",
+                  eps = 0.0001)
> thsdsi

	Simultaneous confidence intervals: Tukey contrasts

Call: 
simint.formula(formula = Y ~ N + V + B, data = oats, whichf = "V", 
    type = "Tukey", eps = 1e-04)

	95 % confidence intervals

                         Estimate lower CI upper CI
VMarvellous-VGolden.rain   5.2917  -5.3274  15.9107
VVictory-VGolden.rain     -6.8750 -17.4941   3.7441
VVictory-VMarvellous     -12.1667 -22.7857  -1.5476
> cissi <- round(thsdsi$conf.int, 2)
> attributes(cissi) <- NULL
> stopifnot(all.equal(cis, cissi))
> 
