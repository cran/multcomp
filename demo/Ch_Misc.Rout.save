
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> ###################################################
> ### chunk number 2: setup
> ###################################################
> set.seed(290875)
> 
> 
> ###################################################
> ### chunk number 3: packages-5
> ###################################################
> library("multcomp")
Loading required package: mvtnorm
Loading required package: survival
Loading required package: TH.data
Loading required package: MASS

Attaching package: ‘TH.data’

The following object is masked from ‘package:MASS’:

    geyser

> library("coin")
> 
> 
> ###################################################
> ### chunk number 4: hypergeom
> ###################################################
> layout(matrix(1:2, ncol = 2))
> x1 <- 0:8
> x2 <- 0:11
> plot(x1,dhyper(x1,50,52,8),  type="h", ylim=c(-0.001,0.3), yaxp=c(0,0.3,3), ylab="Probability", xlab=expression(paste("Number of events, ", E[1])))
> abline(h = 0.1, lty=3)
> abline(h = 0.2, lty=3)
> plot(x2,dhyper(x2,51,55,11), type="h", ylim=c(0,0.3), yaxp=c(0,0.3,3), ylab="Probability", xlab=expression(paste("Number of events, ", E[2])))
> abline(h = 0.1, lty=3)
> abline(h = 0.2, lty=3)
> 
> 
> ###################################################
> ### chunk number 5: hypergeom2
> ###################################################
> layout(matrix(1:1, ncol = 1))
> 
> 
> ###################################################
> ### chunk number 6: adevent-fm
> ###################################################
> data("adevent", package = "multcomp")
> library("coin")
> fm <- as.formula(paste(
+     paste("E", 1:28, sep = "", collapse = "+"), 
+     "~ group"))
> fm
E1 + E2 + E3 + E4 + E5 + E6 + E7 + E8 + E9 + E10 + E11 + E12 + 
    E13 + E14 + E15 + E16 + E17 + E18 + E19 + E20 + E21 + E22 + 
    E23 + E24 + E25 + E26 + E27 + E28 ~ group
> 
> 
> ###################################################
> ### chunk number 7: adevent-coin
> ###################################################
> it <- independence_test(fm, data = adevent, 
+     distribution = approximate(B = 10000))
Warning message:
In approximate(B = 10000) : ‘B’ is deprecated; use ‘nresample’ instead
> statistic(it, "standardized")
  E1.no event E2.no event E3.no event E4.no event E5.no event E6.no event
A    3.311225  -0.2557444   0.3114649  -0.3420494    1.155913    2.019139
  E7.no event E8.no event E9.no event E10.no event E11.no event E12.no event
A  -0.4529473    2.264737    -1.00957     1.418682           -1    -1.418682
  E13.no event E14.no event E15.no event E16.no event E17.no event E18.no event
A           -1    -1.418682     1.418682            0           -1           -1
  E19.no event E20.no event E21.no event E22.no event E23.no event E24.no event
A    -1.418682            1            0           -1            1           -1
  E25.no event E26.no event E27.no event E28.no event
A           -1           -1           -1      0.31773
> pvalue(it, method = "single-step")
  E1.no event E2.no event E3.no event E4.no event E5.no event E6.no event
A      0.0039           1           1           1      0.9998      0.4414
  E7.no event E8.no event E9.no event E10.no event E11.no event E12.no event
A           1      0.2092           1       0.9976            1       0.9976
  E13.no event E14.no event E15.no event E16.no event E17.no event E18.no event
A            1       0.9976       0.9976            1            1            1
  E19.no event E20.no event E21.no event E22.no event E23.no event E24.no event
A       0.9976            1            1            1            1            1
  E25.no event E26.no event E27.no event E28.no event
A            1            1            1            1
> 
> 
> ###################################################
> ### chunk number 8: mtept-coin
> ###################################################
> data("mtept", package = "multcomp")
> it <- independence_test(E1 + E2 + E3 + E4 ~ treatment, 
+     data = mtept, distribution = approximate(B = 50000))
Warning message:
In approximate(B = 50000) : ‘B’ is deprecated; use ‘nresample’ instead
> statistic(it, "standardized")
            E1        E2        E3       E4
Drug -2.490875 -2.434497 -1.289555 2.330816
> pvalue(it, method = "single-step")
         E1      E2      E3      E4
Drug 0.0358 0.04236 0.49854 0.05478
> 
> 
> ###################################################
> ### chunk number 9: gsd-1
> ###################################################
> library("gsDesign")
> x0.0 <- gsDesign(k=4, test.type=1, sfu="WT", sfupar=0)
> x0.25 <- gsDesign(k=4, test.type=1, sfu="WT", sfupar=0.25)
> x0.5 <- gsDesign(k=4, test.type=1, sfu="WT", sfupar=0.5)
> 
> 
> ###################################################
> ### chunk number 10: GSD-a
> ###################################################
> plot(x0.0$timing,x0.0$upper$bound, type="b", pch=20, xlab="Information fraction", ylab="Rejection boundaries")
> lines(x0.25$timing,x0.25$upper$bound, lty=2)
> points(x0.25$timing,x0.25$upper$bound, pch=21)
> lines(x0.5$timing,x0.5$upper$bound, lty=3)
> points(x0.5$timing,x0.5$upper$bound, pch=22)
> legend(x=c(0.6,1), y = c(3.6,4.0), lty=c(1,2,3), pch=c(20,21,22),
+ legend=c(expression(paste(Delta,"=0 (O'Brien-Fleming)")),
+          expression(paste(Delta,"=0.25")),
+          expression(paste(Delta,"=0.5 (Pocock)"))), bty = "n")
> 
> 
> ###################################################
> ### chunk number 11: GSD-b
> ###################################################
> plot(0:100/100, sfHSD(.025, 0:100/100, -4)$spend, type="l", lwd=2,xlab="Information fraction", ylab="Cumulative error-spending")
> lines(0:100/100, sfHSD(.025, 0:100/100, -2)$spend, lty=2, lwd=2)
> lines(0:100/100, sfHSD(.025, 0:100/100, 1)$spend, lty=3, lwd=2)
> legend(x=c(.0, .27), y=.025 * c(.8, 1), lty=1:3, lwd=2, legend=c(expression(paste(gamma," = -4")), expression(paste(gamma," = -2")), expression(paste(gamma," = 1"))), bty = "n")
> 
> 
> ###################################################
> ### chunk number 12: gsd-2
> ###################################################
> library("gsDesign")
> gsd.OF <- gsDesign(k = 4, test.type = 1, sfu = "OF", 
+                     alpha = 0.025, beta = 0.1, timing = 1, 
+                     delta = 0.15) 
> 
> 
> ###################################################
> ### chunk number 13: gsd-3
> ###################################################
> gsd.OF
One-sided group sequential design with
90 % power and 2.5 % Type I Error.
              
  Analysis  N   Z   Nominal p  Spend
         1 120 4.05    0.0000 0.0000
         2 239 2.86    0.0021 0.0021
         3 359 2.34    0.0097 0.0083
         4 478 2.02    0.0215 0.0145
     Total                    0.0250 

++ alpha spending:
 O'Brien-Fleming boundary.

Boundary crossing probabilities and expected sample size
assume any cross stops the trial

Upper boundary (power or Type I Error)
          Analysis
  Theta     1      2      3      4 Total  E{N}
   0.00 0.000 0.0021 0.0083 0.0145 0.025 475.8
   0.15 0.008 0.2850 0.4031 0.2040 0.900 358.4
> 
> 
> ###################################################
> ### chunk number 14: gsd-4
> ###################################################
> gsd.OF2 <- gsDesign(k = 4, test.type = 1, 
+      sfu = "OF", alpha = 0.025, beta = 0.1, timing = 1, 
+      delta = 0)
> gsd.OF2$n.I[4]
[1] 1.022163
> 
> 
> ###################################################
> ### chunk number 15: gsd-5
> ###################################################
> gsd.OF$upper$bound
[1] 4.048591 2.862786 2.337455 2.024296
> 
> 
> ###################################################
> ### chunk number 16: gsd-6
> ###################################################
> gsd.OF$n.I
[1] 119.3366 238.6732 358.0099 477.3465
> 
> 
> ###################################################
> ### chunk number 17: GSD-c
> ###################################################
> print(plot(gsd.OF, plottype = 1, xlab = "Cumulative sample size", main = ""))
> 
> 
> ###################################################
> ### chunk number 18: gsd-7
> ###################################################
> gsd.OF3 <- gsProbability(theta = gsd.OF$delta*seq(0,2,0.25), 
+                           d = gsd.OF)
> gsd.OF3
One-sided group sequential design with
90 % power and 2.5 % Type I Error.
              
  Analysis  N   Z   Nominal p  Spend
         1 120 4.05    0.0000 0.0000
         2 239 2.86    0.0021 0.0021
         3 359 2.34    0.0097 0.0083
         4 478 2.02    0.0215 0.0145
     Total                    0.0250 

++ alpha spending:
 O'Brien-Fleming boundary.

Boundary crossing probabilities and expected sample size
assume any cross stops the trial

Upper boundary (power or Type I Error)
          Analysis
   Theta      1      2      3      4  Total  E{N}
  0.0000 0.0000 0.0021 0.0083 0.0145 0.0250 475.8
  0.0375 0.0001 0.0111 0.0429 0.0700 0.1241 469.5
  0.0750 0.0006 0.0437 0.1395 0.1811 0.3649 450.1
  0.1125 0.0024 0.1281 0.2924 0.2569 0.6798 411.0
  0.1500 0.0080 0.2850 0.4031 0.2040 0.9000 358.4
  0.1875 0.0227 0.4910 0.3752 0.0931 0.9820 307.2
  0.2250 0.0558 0.6745 0.2428 0.0251 0.9982 267.4
  0.2625 0.1188 0.7648 0.1123 0.0041 0.9999 238.9
  0.3000 0.2202 0.7416 0.0378 0.0004 1.0000 217.0
> 
> 
> ###################################################
> ### chunk number 19: gsd-8
> ###################################################
> gsd.OF3$theta
[1] 0.0000 0.0375 0.0750 0.1125 0.1500 0.1875 0.2250 0.2625 0.3000
> 
> 
> ###################################################
> ### chunk number 20: GSD-d
> ###################################################
> plot(gsd.OF3, plottype=2, main="", ylab="Boundary crossing probabilities",
+      base = TRUE)
> 
> 
> ###################################################
> ### chunk number 21: GSD-e
> ###################################################
> plot(gsd.OF3, plottype=6, main="", ylab="Average sample size", base = TRUE)
> abline(h = 467, lty=3)
> 
> 
> ###################################################
> ### chunk number 22: ad-1
> ###################################################
> if (FALSE) {
+ ### asd.sim doesn't exist in asd anymore
+ library("asd")
+ res <- asd.sim(nsamp = c(110, 110), early = c(0.3, 0.3), 
+      final = c(0.3, 0.3), nsim = 10000, corr = 1, select = 1, 
+      ptest = c(1, 2))
+ res
+ 
+ 
+ ###################################################
+ ### chunk number 23: ad-2
+ ###################################################
+     d    <- seq(0,0.3,0.025)
+     len  <- length(d)
+     nsim <- 10000
+ if (!file.exists("ad-2.Rda")) {
+     res  <- matrix(nrow = 4, ncol = len)
+     for (i in 1:len){
+         res[1,i] <- asd.sim(nsamp=c(110,110), early=c(d[i],d[len]), final=c(d[i],d[len]), nsim=nsim, corr=1, select=1, ptest=c(1,2))$sim.reject/nsim
+         res[2,i] <- asd.sim(nsamp=c(110,110), early=c(d[i],d[len]), final=c(d[i],d[len]), nsim=nsim, corr=1, select=2, ptest=c(1,2))$sim.reject/nsim
+         res[3,i] <- asd.sim(nsamp=c(110,110), early=c(d[i],d[len]), final=c(d[i],d[len]), nsim=nsim, corr=1, select=5, ptest=c(1,2))$sim.reject/nsim
+         res[4,i] <- asd.sim(nsamp=c(110,165), early=c(d[i],d[len]), final=c(d[i],d[len]), nsim=nsim, corr=1, select=1, ptest=c(1,2))$sim.reject/nsim
+     }
+     save(res, file = "ad-2.Rda")
+ } else {
+     load("ad-2.Rda")
+ }
+ 
+ 
+ ###################################################
+ ### chunk number 24: ad-3
+ ###################################################
+ plot(d, res[1,], type="n", ylim=c(0.4,1), ylab="Disjunctive power", xlab=expression(theta[1]))
+ lines(lowess(d,res[1,]), lty="11")
+ lines(lowess(d,res[2,]), lty="44")
+ lines(lowess(d,res[3,]), lty="13")
+ lines(lowess(d,res[4,]), lty="F5")
+ legend(0.22,0.55,c("A","B","C","D"), lty=c("11", "44", "13", "F5"), bty = "n")
+ 
+ }
> 
> ###################################################
> ### chunk number 25: mcpmod-1
> ###################################################
> library("DoseFinding")
> candMods <- Mods(linear = NULL, emax = 0.2, 
+      logistic = c(0.25, 0.09), doses = c(0, 0.05, 0.2, 0.6, 1))
> 
> 
> ###################################################
> ### chunk number 26: mcpmod-2
> ###################################################
> plot(candMods, base = 0, maxEff = 1)
> 
> ###################################################
> ### chunk number 28: mcpmod-4
> ###################################################
> data("biom", package = "DoseFinding")
> res <- MCPMod(dose, resp, biom, candMods, alpha = 0.05, 
+      pVal = TRUE, Delta=0.5)
> 
> 
> ###################################################
> ### chunk number 29: mcpmod-5
> ###################################################
> res
MCPMod

Multiple Contrast Test:
         t-Stat   adj-p
emax      3.464 < 0.001
logistic  3.235 0.00184
linear    2.972 0.00315

Estimated Dose Response Models:
linear model
   e0 delta 
0.492 0.559 

emax model
   e0  eMax  ed50 
0.322 0.746 0.142 

logistic model
   e0  eMax  ed50 delta 
0.169 0.773 0.087 0.071 

Selected model (AIC): emax

Estimated TD, Delta=0.5
  linear     emax logistic 
  0.8951   0.2886   0.2255 
> 
> 
> ###################################################
> ### chunk number 30: mcpmod-6
> ###################################################
> summary(res)
MCPMod

***************************************
MCP part 
***************************************
Multiple Contrast Test

Contrasts:
     linear   emax logistic
0    -0.437 -0.643   -0.478
0.05 -0.378 -0.361   -0.435
0.2  -0.201  0.061   -0.147
0.6   0.271  0.413    0.519
1     0.743  0.530    0.540

Contrast Correlation:
         linear  emax logistic
linear    1.000 0.912    0.945
emax      0.912 1.000    0.956
logistic  0.945 0.956    1.000

Multiple Contrast Test:
         t-Stat   adj-p
emax      3.464 < 0.001
logistic  3.235 0.00184
linear    2.972 0.00315

***************************************
Mod part 
***************************************
** Fitted model 1 
Dose Response Model

Model: linear 
Fit-type: normal 

Residuals:
   Min     1Q Median     3Q    Max 
-2.097 -0.445  0.136  0.512  2.164 

Coefficients with approx. stand. error:
      Estimate Std. Error
e0       0.492     0.0998
delta    0.559     0.1885

Residual standard error: 0.714 
Degrees of freedom: 98 

** Fitted model 2 
Dose Response Model

Model: emax 
Fit-type: normal 

Residuals:
   Min     1Q Median     3Q    Max 
-2.000 -0.442  0.130  0.429  2.088 

Coefficients with approx. stand. error:
     Estimate Std. Error
e0      0.322      0.152
eMax    0.746      0.236
ed50    0.142      0.180

Residual standard error: 0.706 
Degrees of freedom: 97 

** Fitted model 3 
Dose Response Model

Model: logistic 
Fit-type: normal 

Residuals:
    Min      1Q  Median      3Q     Max 
-1.9832 -0.3970  0.0792  0.4508  2.0550 

Coefficients with approx. stand. error:
      Estimate Std. Error
e0      0.1691      1.098
eMax    0.7728      1.117
ed50    0.0872      0.262
delta   0.0713      0.119

Residual standard error: 0.709 
Degrees of freedom: 96 

***************************************
Model selection criteria (AIC):
***************************************
  linear     emax logistic 
220.4986 219.1383 220.8288 

Selected model: emax 

***************************************
Estimated TD, Delta=0.5
***************************************
  linear     emax logistic 
  0.8951   0.2886   0.2255 
> 
> 
> ###################################################
> ### chunk number 31: mcpmod-7
> ###################################################
> plot(res, complData = TRUE, clinRel = TRUE, CI = TRUE, 
+       doseEst = TRUE)
> 
> 
> ###################################################
> ### chunk number 32: mcpmod-7
> ###################################################
> detach(package:DoseFinding)
> library(DoseFinding)
> print(plot(res, complData = TRUE, clinRel = TRUE, CI = TRUE,
+       doseEst = TRUE, lty = 1, colors = c("black", "gray", "black", "gray", "black")))
> 
> 
> sessionInfo()
R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Debian GNU/Linux 12 (bookworm)

Matrix products: default
BLAS:   /usr/local/lib/R/lib/libRblas.so 
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.11.0

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

time zone: Europe/Berlin
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] DoseFinding_1.2-1 gsDesign_3.6.4    coin_1.4-3        multcomp_1.4-26  
[5] TH.data_1.1-2     MASS_7.3-61       survival_3.7-0    mvtnorm_1.3-2    

loaded via a namespace (and not attached):
 [1] Matrix_1.7-1      gtable_0.3.6      dplyr_1.1.4       compiler_4.4.2   
 [5] tidyselect_1.2.1  xml2_1.3.6        parallel_4.4.2    tidyr_1.3.1      
 [9] splines_4.4.2     scales_1.3.0      fastmap_1.2.0     lattice_0.22-6   
[13] ggplot2_3.5.1     R6_2.5.1          labeling_0.4.3    generics_0.1.3   
[17] tibble_3.2.1      r2rtf_1.1.1       munsell_0.5.1     pillar_1.9.0     
[21] rlang_1.1.4       utf8_1.2.4        modeltools_0.2-23 cli_3.6.3        
[25] withr_3.0.2       magrittr_2.0.3    digest_0.6.37     grid_4.4.2       
[29] xtable_1.8-4      sandwich_3.1-1    lifecycle_1.0.4   vctrs_0.6.5      
[33] glue_1.8.0        farver_2.1.2      libcoin_1.0-10    codetools_0.2-20 
[37] zoo_1.8-12        stats4_4.4.2      gt_0.11.1         fansi_1.0.6      
[41] colorspace_2.1-1  purrr_1.0.2       htmltools_0.5.8.1 matrixStats_1.4.1
[45] tools_4.4.2       pkgconfig_2.0.3  
> 
> proc.time()
   user  system elapsed 
  1.403   0.065   1.474 
